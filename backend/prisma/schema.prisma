generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Role {
  role_id   Int         @id @default(autoincrement())
  role_name String
  user_role User_Role[]

  @@map("role")
}

model User {
  user_id              Int                @id @default(autoincrement())
  full_name            String
  nic                  String
  email                String             @unique
  phone_number         String?
  password_hash        String
  created_at           DateTime           @default(now())
  fuelStations         Fuel_Station[]     @relation("StationOwner")
  transactionsOperated Fuel_Transaction[] @relation("OperatorUser")
  user_role            User_Role[]
  vehicles             Vehicle[]

  @@map("user")
}

model User_Role {
  user_id Int
  role_id Int
  role    Role @relation(fields: [role_id], references: [role_id])
  user    User @relation(fields: [user_id], references: [user_id])

  @@id([user_id, role_id])
  @@index([role_id], map: "user_role_role_id_fkey")
  @@map("user_role")
}

model Department_of_Motor_Traffic {
  dmt_id          Int      @id @default(autoincrement())
  registration_no String
  chassis_no      String
  engine_no       String
  owner_nic       String
  vehicle_brand   String?
  vehicle_model   String?
  vehicle_type    String?
  registered_date DateTime

  @@map("department_of_motor_traffic")
}

model Vehicle {
  vehicle_id        Int                @id @default(autoincrement())
  registration_no   String             @unique
  chassis_no        String
  engine_no         String
  vehicle_type      String
  qr_code           String
  user_id           Int
  fuel_quotas       Fuel_Quota[]
  fuel_transactions Fuel_Transaction[]
  user              User               @relation(fields: [user_id], references: [user_id])

  @@index([user_id], map: "vehicle_user_id_fkey")
  @@map("vehicle")
}

model Fuel_Station {
  station_id        Int                @id @default(autoincrement())
  station_name      String
  station_license   String
  address           String?
  district          String?
  owner_user_id     Int
  owner             User               @relation("StationOwner", fields: [owner_user_id], references: [user_id])
  fuel_transactions Fuel_Transaction[]

  @@index([owner_user_id], map: "fuel_station_owner_user_id_fkey")
  @@map("fuel_station")
}

model Fuel_Quota {
  quota_id         Int     @id @default(autoincrement())
  vehicle_id       Int
  allocated_litres Float
  used_litres      Float   @default(0)
  quota_period     String
  vehicle          Vehicle @relation(fields: [vehicle_id], references: [vehicle_id])

  @@index([vehicle_id], map: "fuel_quota_vehicle_id_fkey")
  @@map("fuel_quota")
}

model Fuel_Transaction {
  transaction_id   Int          @id @default(autoincrement())
  vehicle_id       Int
  station_id       Int
  operator_user_id Int
  pumped_litres    Float
  transaction_time DateTime     @default(now())
  operator         User         @relation("OperatorUser", fields: [operator_user_id], references: [user_id])
  station          Fuel_Station @relation(fields: [station_id], references: [station_id])
  vehicle          Vehicle      @relation(fields: [vehicle_id], references: [vehicle_id])

  @@index([operator_user_id], map: "fuel_transaction_operator_user_id_fkey")
  @@index([station_id], map: "fuel_transaction_station_id_fkey")
  @@index([vehicle_id], map: "fuel_transaction_vehicle_id_fkey")
  @@map("fuel_transaction")
}
: [station_id])
  operator User         @relation("OperatorUser", fields: [operator_user_id], references: [user_id])

elds: [station_id], references: [station_id])
  operator User         @relation("OperatorUser", fields: [operator_user_id], references: [user_id])

  @@map("fuel_transaction")
}
